import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
%matplotlib inline

car_data = pd.read_csv('car data.csv')
car_data.head()
car_data.tail()
car_data.info()

car_data.shape
car_data.columns

sns.jointplot(x='Selling_Price',y='Present_Price',data=car_data,hue='Year')

car_data['Year'].astype(float).dtypes
car_data['Kms_Driven'].astype(float).dtypes

car_data.describe()

car_data['Fuel_Type'].unique()

car_data['Fuel_Type'].replace({'Petrol':0,'Diesel':1,'CNG':2},inplace=True)
car_data['Fuel_Type'].unique()
car_data['Fuel_Type'].astype(float).dtypes

car_data.describe()


from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error, mean_absolute_error, r2_score, accuracy_score
from sklearn.linear_model import LinearRegression
X = car_data[['Year','Selling_Price','Kms_Driven','Fuel_Type']]
y = car_data['Present_Price']
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)


model = LinearRegression()
model.fit(X_train, y_train)

pred = model.predict(X_test)
pred

print("Shape of y_test:", y_test.shape)
print("Shape of pred:", pred.shape)

mse = mean_squared_error(y_test,pred)
mae = mean_absolute_error(y_test,pred)
r2 = r2_score(y_test,pred)

print("Mean Squared Error (MSE):", mse)
print("Mean Absolute Error (MAE):", mae)
print("R-Squared (R2) Score:", r2)


model.score(X_train,y_train)

sns.regplot(x=pred, y=y_test)
plt.xlabel("Predicted Price")
plt.ylabel('Actual Price')
plt.title("Actual VS Predicted Price")
plt.show()

